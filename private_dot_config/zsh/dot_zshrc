## Setting the XDG_CONFIG_HOME and XDG_CACHE_HOME
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
export ZSHCACHE="$XDG_CACHE_HOME/zsh"

# setting up nvim as editor (if it exists)
if type nvim &> /dev/null; then
	export EDITOR=nvim
	alias vi=nvim
	alias vim=nvim
else
	export EDITOR=nano
fi

# Set up Kitty integration
 if test -n "$KITTY_INSTALLATION_DIR"; then
            export KITTY_SHELL_INTEGRATION="enabled"
            autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
            kitty-integration
            unfunction kitty-integration
 fi


# Setting up History
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify
setopt INC_APPEND_HISTORY
unsetopt HIST_BEEP
# Share History between all terminal windows
setopt share_history

HISTSIZE=100000
SAVEHIST=100000
HISTFILE="$XDG_CACHE_HOME/zsh/history"

HISTORY_IGNORE="(cd ..|l[s]#( *)#|pwd *|exit *|date *|* --help)"

# Set some options about directories
setopt pushd_ignore_dups
setopt AUTO_CD  # If a command is issued that canâ€™t be executed as a normal command,
                # and the command is the name of a directory, perform the cd command
                # to that directory.
# Misc
setopt INTERACTIVE_COMMENTS  # Enable comments in interactive shell.

setopt extended_glob # Enable more powerful glob features

# Long running processes should return time after they complete. Specified
# in seconds.
REPORTTIME=2
TIMEFMT="%U user %S system %P cpu %*Es total"

# Autocomplete
# Speed up autocomplete, force prefix mapping
autoload -Uz compinit
compinit
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/zcompcache"
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)*==34=34}:${(s.:.)LS_COLORS}")';
zstyle ':completion:*' menu select



# ZSH plugin management
# currently using ["antidote"](https://getantidote.github.io/)
zstyle ':antidote:bundle' use-friendly-names 'yes'

zsh_plugins="${ZDOTDIR}/plugins.zsh"

[[ -f ${zsh_plugins:r}.txt ]] || touch ${zsh_plugins:r}.txt

#source "$ZDOTDIR/antidote/antidote.zsh"
# Lazy-load antidote.
fpath+=($ZDOTDIR/antidote)
autoload -Uz $fpath[-1]/antidote


# Generate static file in a subshell when .zsh_plugins.txt is updated.
if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
  (antidote bundle <${zsh_plugins:r}.txt >|$zsh_plugins)
fi

# Source your static plugins file.
source $zsh_plugins 

zstyle ':completion:*' menu select
zmodload zsh/complist

# Load Functions and Aliases
if [ -r "$ZDOTDIR/functions.zsh" ]; then
	source "$ZDOTDIR/functions.zsh"
fi

if [ -r "$ZDOTDIR/aliases.zsh" ]; then
	source "$ZDOTDIR/aliases.zsh"
fi

export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

BITWARDEN_EMAIL=brendan@ingham.dev
export BW_SESSION=$(bw login $BITWARDEN_EMAIL --raw)
export BWS_ACCESS_TOKEN="0.31a5e4d2-a6e5-4d61-8f3b-b01f008a28d3.LhCZueoqI5lOCwpYFPDcgYTvmUmBzE:F5ZXPK8ZnDwrwmza/d3wMA=="

if type starship &> /dev/null; then
	eval "$(starship init zsh)"
fi
